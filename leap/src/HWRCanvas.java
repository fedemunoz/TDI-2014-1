import java.awt.AWTException;
import java.awt.Robot;
import java.awt.TextArea;
import java.sql.Time;
import java.util.ArrayList;

import javax.management.timer.Timer;


import com.leapmotion.leap.Finger;
import com.onformative.leap.LeapMotionP5;

import de.voidplus.dollar.OneDollar;
import processing.core.PApplet;
import processing.core.PVector;


public class HWRCanvas extends PApplet{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private OneDollar one;

	private boolean isStarted = false;
	
	private boolean noFingers = true;
	
	
	// generate key events
	Robot robot;
	
	// the leap
	private LeapMotionP5 leap;
	
	private Main  main;
	
	private int time = 0;
        
        ArrayList<Integer> templateXY;
        Boolean Grabo;


	PVector avgPos = new PVector();
	
	public HWRCanvas()
	{
	
	}

	
	public HWRCanvas(Main main)
	{
		
		this.main    = main;

	}
	
	@Override
	public void setup()
	{
		  size(300,300);
		  background(250);
                  templateXY = new ArrayList<Integer>();
                  Grabo = true;

		  
		  // initialize the Leap
		  leap = new LeapMotionP5(this);
		  
		  try {
			robot = new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		  
		  one = new OneDollar(this);
		 
//		  one.add("A", new Integer[] {68, 220, 68, 220, 68, 220, 68, 220, 72, 217, 97, 172, 97, 172, 110, 150, 
//		    131, 119, 145, 100, 158, 85, 172, 70, 177, 64, 180, 61, 182, 59, 182, 59, 184, 58, 184, 58, 185, 
//		    57, 185, 57, 185, 56, 185, 56, 185, 56, 185, 56, 186, 58, 187, 73, 187, 85, 187, 99, 188, 116, 
//		    191, 141, 191, 174, 191, 174, 192, 186, 192, 186, 197, 205, 199, 212, 199, 215, 200, 217, 200, 
//		    217, 200, 217, 200, 217, 200, 217, 200, 217, 200, 217, 200, 217, 200, 217, 200, 217, 200, 217, 
//		    200, 217, 200, 217, 200, 216, 201, 205, 201, 197, 201, 188, 200, 165, 200, 165, 197, 159, 194, 
//		    151, 193, 149, 192, 148, 191, 147, 191, 147, 191, 147, 191, 147, 191, 147, 191, 147, 191, 147, 
//		    191, 147, 191, 147, 191, 147, 191, 147, 186, 147, 186, 147, 172, 147, 164, 147, 153, 147, 153, 147, 
//		    126, 147, 126, 147, 106, 147, 106, 147, 102, 147, 102, 147, 102, 147, 102, 147, 102, 147, 102, 147, 
//		    102, 147, 102, 147, 101, 147, 101, 147});
		  
		  //one.add("A", new Integer[] {47, 279, 47, 279, 47, 279, 47, 279, 47, 278, 71, 235, 71, 235, 90, 205, 101, 186, 116, 163, 131, 138, 147, 115, 156, 101, 170, 82, 170, 82, 174, 77, 179, 73, 181, 72, 181, 72, 182, 71, 182, 71, 182, 71, 182, 71, 183, 71, 183, 74, 185, 88, 185, 88, 200, 139, 209, 166, 218, 188, 218, 188, 236, 216, 246, 226, 257, 239, 268, 251, 275, 263, 279, 273, 282, 285, 282, 285, 282, 291, 282, 291, 282, 291, 282, 291, 282, 291, 282, 291, 282, 291, 282, 291, 282, 291});
//		  one.add("A", new Integer[] {27, 91, 27, 91, 27, 91, 27, 91, 27, 91, 27, 89, 27, 87, 28, 81, 29, 75, 32, 68, 32, 68, 37, 57, 39, 52, 40, 49, 40, 45, 40, 44, 40, 44, 41, 44, 41, 44, 41, 43, 42, 41, 43, 39, 47, 32, 47, 32, 52, 26, 54, 25, 54, 25, 56, 24, 56, 24, 56, 24, 56, 24, 56, 24, 56, 24, 56, 23, 56, 23, 56, 23, 56, 23, 56, 23, 56, 23, 56, 23, 56, 23, 57, 25, 59, 29, 63, 38, 68, 48, 73, 59, 75, 65, 77, 68, 79, 70, 79, 71, 79, 71});
//		  one.add("F", new Integer[] {266, 46, 266, 46, 266, 46, 266, 46, 266, 46, 266, 46, 265, 46, 160, 37, 160, 37, 119, 35, 119, 35, 92, 34, 92, 34, 76, 33, 71, 33, 69, 33, 67, 33, 67, 33, 67, 33, 67, 33, 67, 33, 67, 33, 68, 34, 72, 43, 79, 56, 86, 72, 86, 72, 98, 106, 102, 122, 105, 138, 105, 138, 109, 167, 110, 193, 110, 193, 110, 201, 110, 210, 109, 218, 108, 221, 107, 223, 107, 227, 105, 236, 104, 249, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265, 104, 265});  
//		    
//		  one.add("B", new Integer[] {24, 95, 24, 95, 24, 95, 24, 95, 24, 95, 24, 95, 24, 95, 24, 93, 24, 87, 24, 78, 24, 72, 24, 66, 24, 61, 24, 55, 24, 52, 24, 48, 25, 44, 25, 44, 28, 36, 31, 29, 34, 25, 38, 22, 44, 17, 48, 15, 52, 12, 56, 11, 60, 11, 63, 11, 66, 16, 67, 20, 68, 26, 68, 34, 66, 41, 62, 47, 55, 54, 49, 56, 46, 58, 43, 60, 42, 60, 42, 60, 42, 60, 42, 60, 42, 60, 43, 60, 44, 60, 48, 60, 52, 60, 60, 60, 66, 60, 72, 64, 76, 67, 78, 74, 79, 78, 79, 82, 76, 85, 73, 88, 67, 90, 63, 90, 58, 90, 54, 90, 52, 88, 51, 86, 51, 86, 51, 86});
//		  
//		  
//		  one.add("G", new Integer[] {214, 91, 214, 91, 214, 91, 214, 91, 214, 90, 214, 75, 214, 75, 209, 
//		    66, 200, 56, 192, 48, 184, 42, 175, 38, 175, 38, 154, 36, 154, 36, 135, 36, 124, 42, 113, 50, 
//		    104, 58, 95, 65, 88, 72, 83, 79, 79, 87, 76, 111, 76, 111, 75, 127, 78, 163, 84, 179, 84, 179, 
//		    96, 200, 106, 210, 120, 221, 151, 233, 164, 238, 164, 238, 203, 241, 219, 240, 228, 236, 237, 
//		    230, 244, 220, 249, 204, 249, 193, 249, 184, 249, 177, 249, 173, 249, 168, 249, 166, 249, 164, 
//		    247, 162, 246, 162, 244, 162, 240, 162, 240, 162, 233, 162, 218, 163, 206, 163, 195, 163, 183, 
//		    163, 170, 163, 156, 163, 148, 163, 145, 163, 145, 163, 144, 163, 144, 163, 144, 163, 144, 163, 
//		    144, 163, 144, 163, 144, 163, 144, 163}); 
//		  
//		  one.add("L", new Integer[] {103, 30, 103, 30, 103, 30, 103, 30, 103, 30, 103, 32, 103, 101, 103, 101, 103, 133, 103, 155, 103, 181, 103, 203, 103, 221, 103, 221, 103, 245, 103, 253, 103, 259, 103, 261, 103, 263, 103, 264, 103, 266, 104, 267, 106, 268, 110, 270, 115, 270, 122, 270, 133, 264, 145, 259, 157, 255, 169, 251, 177, 249, 188, 247, 195, 247, 203, 247, 208, 247, 218, 247, 218, 247, 221, 247, 223, 248, 224, 250, 225, 251, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252, 225, 252});
//		  
//		  one.add("V", new Integer[] {35, 41, 35, 41, 35, 41, 35, 41, 35, 41, 35, 41, 35, 41, 35, 41, 35, 41, 35, 43, 61, 94, 61, 
//				  94, 70, 104, 78, 118, 89, 131, 98, 143, 108, 152, 115, 161, 122, 168, 131, 178, 138, 185, 145, 194, 152, 201, 
//				  159, 208, 164, 215, 167, 218, 170, 223, 172, 226, 174, 227, 176, 229, 177, 230, 178, 232, 178, 232, 178, 232, 
//				  178, 232, 178, 232, 178, 232, 178, 232, 178, 232, 178, 232, 178, 231, 178, 229, 178, 223, 178, 214, 178, 195, 
//				  178, 177, 182, 159, 188, 140, 196, 120, 206, 100, 212, 89, 218, 78, 222, 70, 226, 63, 232, 55, 239, 42, 243, 
//				  35, 246, 27, 249, 23, 253, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 
//				  16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 16, 254, 
//				  16, 254, 16, 254, 16, 254, 16});
//		  
//		  //one.add("T", new Integer[] {59, 43, 59, 43, 59, 43, 59, 43, 59, 43, 59, 43, 59, 43, 103, 45, 103, 45, 116, 46, 128, 48, 142, 48, 155, 48, 169, 49, 183, 49, 196, 49, 204, 49, 213, 49, 218, 49, 221, 49, 223, 49, 224, 50, 225, 50, 226, 51, 228, 55, 232, 63, 235, 77, 239, 92, 241, 106, 243, 125, 244, 143, 244, 158, 244, 166, 244, 174, 244, 181, 244, 187, 244, 191, 245, 194, 246, 198, 247, 200, 248, 201, 248, 202, 249, 204, 250, 207, 250, 210, 251, 214, 251, 219, 251, 224, 252, 228, 252, 230, 252, 231, 252, 232, 252, 233, 252, 234, 252, 243, 252, 243, 254, 259, 256, 266, 256, 269, 256, 269, 256, 269});
//		  one.add("T", new Integer[] {39, 48, 88, 44, 88, 44, 118, 43, 153, 43, 187, 43, 207, 43, 228, 43, 244, 43, 255, 43, 265, 43, 272, 43, 277, 43, 280, 43, 281, 47, 282, 52, 282, 60, 282, 76, 282, 97, 282, 127, 282, 149, 282, 174, 282, 192, 285, 209, 286, 222, 286, 222, 286, 222});
//		  
//		  one.add("space", new Integer[] {7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 8, 52, 9, 52, 14, 52, 18, 52, 23, 52, 28, 52, 34, 52, 39, 52, 44, 52, 50, 52, 55, 52, 60, 52, 65, 52, 69, 52, 72, 52, 75, 52, 78, 52, 80, 52, 82, 52, 84, 52, 86, 52, 87, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52, 88, 52});
//		  
		  //one.add("caps", new Integer[] {138, 279, 138, 279, 138, 279, 138, 279, 138, 279, 138, 279, 138, 277, 135, 164, 135, 164, 133, 124, 133, 102, 133, 76, 133, 63, 133, 51, 133, 46, 133, 44, 133, 44, 132, 42, 132, 42, 132, 42, 132, 42, 132, 42, 132, 42, 132, 43, 132, 44, 132, 51, 131, 62, 131, 62, 124, 98, 116, 119, 108, 144, 108, 144, 90, 185, 85, 196, 82, 204, 80, 207, 79, 208, 79, 208, 79, 208, 79, 208, 79, 208, 79, 208, 79, 208, 79, 207, 79, 206, 79, 205, 79, 201, 79, 192, 83, 177, 91, 148, 98, 126, 104, 103, 113, 80, 119, 66, 125, 55, 129, 47, 131, 43, 132, 42, 133, 42, 133, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 134, 42, 197, 190, 209, 226, 216, 259, 220, 278, 220, 278});
		  //one.add("caps", new Integer[] {137,139,135,141,133,144,132,146,130,149,128,151,126,155,123,160,120,166,116,171,112,177,107,183,102,188,100,191,95,195,90,199,86,203,82,206,80,209,75,213,73,213,70,216,67,219,64,221,61,223,60,225,62,226,65,225,67,226,74,226,77,227,85,229,91,230,99,231,108,232,116,233,125,233,134,234,145,233,153,232,160,233,170,234,177,235,179,236,186,237,193,238,198,239,200,237,202,239,204,238,206,234,205,230,202,222,197,216,192,207,186,198,179,189,174,183,170,178,164,171,161,168,154,160,148,155,143,150,138,148,136,148} );
		  
		  //one.add("circle", new Integer[] {127,141,124,140,120,139,118,139,116,139,111,140,109,141,104,144,100,147,96,152,93,157,90,163,87,169,85,175,83,181,82,190,82,195,83,200,84,205,88,213,91,216,96,219,103,222,108,224,111,224,120,224,133,223,142,222,152,218,160,214,167,210,173,204,178,198,179,196,182,188,182,177,178,167,170,150,163,138,152,130,143,129,140,131,129,136,126,139} );
		  //one.add("C", new Integer[] {212, 82, 212, 82, 212, 82, 212, 82, 212, 82, 212, 82, 212, 82, 211, 82, 211, 81, 208, 79, 203, 76, 199, 74, 191, 71, 183, 68, 176, 65, 172, 65, 169, 65, 169, 65, 158, 65, 151, 67, 144, 72, 134, 79, 124, 88, 116, 97, 109, 105, 102, 113, 95, 126, 88, 146, 86, 158, 86, 171, 89, 179, 97, 191, 108, 201, 122, 209, 137, 214, 153, 218, 165, 219, 173, 221, 179, 221, 190, 221, 200, 221, 210, 221, 218, 221, 223, 221, 229, 220, 232, 219, 233, 219, 234, 218, 240, 217, 240, 217, 240, 217, 240, 217, 240, 217, 240, 217});
		 
		  
		  // new alphabet
		  //one.add("A", new Integer[] {152, 284, 152, 284, 152, 284, 152, 284, 152, 283, 152, 282, 152, 280, 152, 280, 152, 265, 152, 245, 152, 220, 152, 190, 152, 167, 152, 143, 152, 119, 152, 106, 152, 97, 152, 92, 152, 88, 152, 87, 152, 87, 152, 87, 152, 87, 152, 87, 152, 87, });
		  one.add("A", new Integer[] {137,139,135,141,133,144,132,146,130,149,128,151,126,155,123,160,120,166,116,171,112,177,107,183,102,188,100,191,95,195,90,199,86,203,82,206,80,209,75,213,73,213,70,216,67,219,64,221,61,223,60,225,62,226,65,225,67,226,74,226,77,227,85,229,91,230,99,231,108,232,116,233,125,233,134,234,145,233,153,232,160,233,170,234,177,235,179,236,186,237,193,238,198,239,200,237,202,239,204,238,206,234,205,230,202,222,197,216,192,207,186,198,179,189,174,183,170,178,164,171,161,168,154,160,148,155,143,150,138,148,136,148});
		  //one.add("B", new Integer[] {228, 29, 228, 29, 228, 29, 228, 29, 228, 29, 228, 29, 228, 32, 228, 39, 228, 50, 228, 72, 228, 94, 228, 119, 228, 137, 228, 156, 226, 171, 225, 177, 225, 185, 225, 191, 224, 200, 224, 204, 224, 209, 224, 212, 224, 218, 224, 223, 224, 232, 224, 237, 224, 242, 224, 244, 224, 245, 224, 245, 224, 245, 224, 245, 224, 245, 224, 245, 224, 245, 224, 245, 224, 245, 224, 245, 222, 245, 219, 245, 211, 245, 200, 245, 180, 246, 167, 247, 167, 247, 114, 247, 99, 247, 87, 247, 76, 245, 71, 244, 68, 244, 67, 243, 67, 243, 67, 243, 67, 243, 67, 243, 67, 243, 67, 243, 67, 243, 65, 243, 65, 243, 65, 243, 65, 243, 65, 243});
		  one.add("B", new Integer[] {35, 31, 35, 31, 35, 31, 35, 31, 35, 31, 35, 31, 39, 31, 45, 31, 51, 33, 60, 38, 70, 44, 83, 51, 97, 58, 110, 67, 126, 74, 141, 82, 156, 91, 171, 100, 185, 110, 195, 115, 206, 122, 212, 126, 219, 129, 223, 130, 225, 132, 228, 133, 229, 135, 230, 135, 231, 135, 232, 136, 232, 136, 232, 136, 232, 136, 232, 136, 232, 136, 232, 137, 232, 137, 232, 138, 232, 138, 232, 138, 231, 139, 227, 142, 222, 146, 212, 151, 199, 158, 158, 182, 152, 185, 129, 197, 105, 210, 83, 220, 72, 226, 61, 233, 55, 236, 49, 238, 46, 239, 44, 240, 44, 240, 43, 240, 43, 240, 43, 240, 43, 240, 43, 240, 43, 240, 43, 240, 43, 240});
		  one.add("C", new Integer[] {232, 272, 232, 272, 232, 272, 232, 272, 232, 272, 232, 272, 232, 272, 232, 272, 231, 272, 225, 268, 216, 264, 204, 259, 188, 250, 169, 240, 146, 226, 125, 214, 107, 203, 88, 192, 76, 185, 64, 178, 55, 173, 51, 170, 45, 167, 41, 163, 38, 160, 36, 158, 35, 156, 35, 155, 35, 153, 38, 148, 44, 144, 58, 137, 72, 129, 97, 114, 117, 104, 141, 90, 163, 82, 177, 78, 192, 73, 202, 68, 207, 66, 214, 64, 214, 64});
		  one.add("D", new Integer[] {242, 31, 242, 31, 242, 31, 242, 31, 242, 31, 242, 31, 242, 32, 240, 33, 233, 39, 233, 39, 209, 59, 190, 78, 175, 92, 175, 92, 144, 119, 135, 128, 130, 134, 124, 140, 121, 143, 121, 144, 121, 144, 121, 144, 121, 144, 121, 144, 121, 144, 121, 144, 121, 145, 122, 146, 129, 151, 144, 159, 172, 173, 198, 191, 217, 204, 217, 204, 255, 229, 266, 235, 271, 238, 276, 242, 279, 244, 281, 246, 283, 248, 283, 248});
		  //one.add("E", new Integer[] {27, 148, 27, 148, 27, 148, 27, 148, 27, 148, 34, 148, 46, 148, 64, 148, 88, 148, 114, 148, 139, 148, 155, 148, 172, 148, 187, 148, 187, 148, 187, 148, 226, 146, 235, 146, 241, 146, 241, 146, 253, 146, 256, 146, 260, 146, 264, 146, 266, 146, 267, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147, 268, 147});
		  one.add("E", new Integer[] {211, 53, 211, 53, 211, 53, 211, 53, 211, 53, 211, 53, 211, 53, 206, 53, 203, 54, 196, 56, 186, 57, 172, 59, 155, 60, 137, 61, 126, 61, 118, 61, 118, 61, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 106, 62, 108, 67, 108, 75, 110, 94, 112, 120, 112, 140, 113, 161, 113, 161, 113, 161, 119, 212, 119, 218, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 121, 222, 133, 222, 149, 222, 174, 222, 197, 222, 212, 222, 212, 222, 212, 222, 216, 221, 216, 221, 216, 221, 216, 221});
		  one.add("F", new Integer[] {273, 39, 273, 39, 273, 39, 273, 39, 272, 39, 269, 39, 264, 39, 248, 39, 238, 39, 218, 39, 198, 39, 179, 39, 165, 39, 146, 39, 132, 37, 120, 37, 112, 37, 104, 36, 96, 36, 90, 36, 85, 36, 79, 36, 76, 36, 72, 36, 69, 36, 68, 36, 67, 36, 67, 36, 67, 36, 67, 36, 67, 36, 67, 36, 71, 46, 73, 58, 77, 71, 81, 93, 83, 113, 84, 136, 84, 162, 84, 183, 84, 204, 84, 220, 82, 231, 80, 238, 79, 244, 78, 248, 77, 250, 76, 251, 76, 251, 76, 251, 76, 251, 76, 251, 76, 251, 76, 251, 76, 251, 76, 251, 76, 251});
		  one.add("G", new Integer[] {45, 251, 45, 251, 45, 251, 45, 251, 45, 251, 45, 251, 46, 251, 49, 251, 56, 251, 56, 251, 82, 251, 98, 251, 122, 251, 122, 251, 157, 251, 172, 250, 183, 248, 183, 248, 202, 245, 207, 245, 212, 244, 212, 244, 217, 243, 218, 243, 218, 243, 218, 243, 218, 243, 218, 243, 218, 243, 218, 243, 218, 243, 218, 243, 218, 242, 218, 242, 218, 220, 217, 198, 216, 169, 216, 169, 216, 128, 216, 112, 216, 100, 216, 100, 216, 82, 216, 73, 216, 65, 216, 65, 216, 54, 216, 49, 216, 45, 216, 45, 216, 45, 216, 43, 216, 43, 216, 43, 216, 43, 216, 43});
		  one.add("H", new Integer[] {47, 56, 47, 56, 47, 56, 47, 56, 46, 56, 48, 56, 55, 56, 67, 56, 78, 56, 101, 56, 120, 56, 137, 56, 150, 56, 165, 57, 178, 57, 188, 57, 193, 57, 200, 57, 204, 57, 208, 56, 209, 56, 209, 56, 210, 56, 210, 56, 210, 56, 210, 56, 210, 56, 210, 56, 210, 56, 210, 57, 210, 65, 210, 79, 211, 102, 213, 129, 215, 148, 217, 171, 218, 189, 218, 204, 218, 224, 218, 248, 218, 253, 218, 253, 218, 257, 218, 258, 218, 259, 218, 259, 218, 259, 218, 259, 218, 259, 218, 259, 218, 259, 218, 259, 218, 259, 218, 259, 217, 259, 217, 259, 217, 259, 217, 259, 217, 259, 217, 259, 217, 259});
		  // re-check start/end
		  //one.add("I", new Integer[] {145, 42, 145, 42, 145, 42, 145, 45, 145, 55, 145, 69, 145, 91, 145, 111, 145, 145, 145, 198, 145, 217, 145, 248, 145, 267, 145, 275, 145, 281, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283, 145, 283});
		  one.add("I", new Integer[] {260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 260, 275, 259, 273, 253, 259, 239, 241, 221, 228, 194, 209, 159, 182, 136, 166, 114, 147, 98, 132, 88, 120, 81, 110, 74, 102, 68, 95, 64, 91, 62, 89, 61, 88, 58, 84, 54, 80, 54, 80, 51, 75, 50, 73, 49, 73});
		  one.add("J", new Integer[] {237, 32, 237, 32, 237, 32, 237, 32, 237, 32, 237, 32, 237, 32, 237, 33, 237, 36, 237, 43, 237, 53, 238, 67, 239, 77, 239, 90, 239, 102, 239, 117, 239, 131, 239, 146, 239, 157, 239, 169, 239, 179, 239, 189, 239, 198, 239, 206, 239, 211, 238, 216, 238, 220, 237, 225, 237, 228, 236, 231, 235, 232, 234, 233, 231, 235, 226, 235, 217, 237, 205, 237, 190, 237, 174, 237, 158, 237, 142, 237, 130, 237, 116, 237, 106, 237, 95, 238, 86, 238, 77, 238, 66, 238, 55, 238, 47, 238, 43, 238, 36, 238, 33, 237, 31, 236, 29, 236, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235, 28, 235});
		  one.add("K", new Integer[] {67, 272, 67, 272, 67, 272, 67, 272, 67, 272, 67, 272, 67, 272, 67, 272, 67, 272, 67, 272, 67, 271, 68, 267, 72, 262, 77, 255, 86, 245, 94, 235, 104, 220, 115, 207, 123, 197, 132, 187, 141, 173, 150, 160, 167, 133, 167, 133, 179, 114, 194, 91, 200, 81, 206, 74, 208, 71, 212, 66, 216, 62, 218, 59, 219, 58, 219, 58, 219, 57, 219, 57, 219, 57, 219, 57, 219, 57, 219, 57, 219, 57, 219, 57});
		  one.add("L", new Integer[] {68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 33, 68, 34, 68, 39, 70, 47, 72, 64, 74, 83, 76, 106, 77, 125, 77, 153, 77, 177, 77, 195, 77, 209, 77, 221, 77, 231, 77, 237, 77, 242, 77, 244, 77, 246, 77, 246, 77, 246, 77, 246, 77, 246, 77, 246, 77, 246, 77, 246, 78, 246, 79, 246, 80, 246, 83, 246, 90, 246, 104, 243, 125, 241, 158, 241, 182, 241, 211, 245, 225, 248, 235, 250, 243, 251, 249, 251, 255, 251, 258, 251, 261, 249, 263, 247, 264, 247});
		  one.add("M", new Integer[] {261, 249, 261, 249, 261, 249, 261, 249, 261, 249, 261, 249, 261, 249, 261, 249, 261, 249, 260, 248, 256, 245, 248, 234, 236, 214, 216, 178, 205, 151, 181, 93, 181, 93, 164, 57, 158, 44, 153, 34, 153, 34, 145, 23, 143, 20, 140, 18, 140, 16, 140, 16, 140, 16, 140, 16, 140, 16, 140, 16, 140, 16, 140, 16, 139, 17, 138, 21, 134, 32, 129, 47, 122, 70, 113, 96, 100, 135, 89, 161, 71, 210, 65, 224, 59, 239, 55, 249, 53, 252, 52, 254, 50, 254, 50, 254, 48, 254, 48, 254});
		  
		  //one.add("N", new Integer[] {75, 266, 75, 266, 75, 266, 75, 266, 75, 266, 75, 266, 75, 266, 75, 266, 75, 263, 77, 254, 77, 254, 83, 241, 99, 198, 105, 178, 105, 178, 127, 112, 135, 81, 142, 64, 142, 64, 149, 36, 151, 30, 152, 27, 152, 27, 154, 25, 154, 25, 155, 25, 155, 25, 155, 25, 157, 29, 161, 40, 166, 53, 170, 62, 191, 116, 191, 116, 217, 166, 217, 166, 233, 194, 233, 194, 241, 204, 251, 217, 255, 222, 257, 227, 257, 227, 260, 241});
		  one.add("N", new Integer[] {77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 77, 196, 78, 195, 78, 191, 78, 188, 78, 184, 78, 176, 78, 171, 78, 164, 78, 159, 79, 153, 80, 148, 82, 142, 83, 137, 84, 130, 85, 127, 87, 122, 88, 117, 90, 114, 92, 109, 95, 106, 97, 103, 99, 101, 101, 99, 104, 97, 107, 95, 113, 95, 116, 95, 119, 95, 119, 95, 125, 98, 127, 99, 127, 99, 131, 103, 133, 104, 134, 106, 134, 106, 135, 108, 138, 112, 139, 114, 140, 116, 140, 117, 142, 120, 143, 123, 144, 126, 144, 129, 145, 133, 146, 137, 147, 140, 148, 143, 149, 146, 150, 149, 152, 151, 153, 154, 154, 155, 156, 157, 158, 161, 160, 165, 161, 167, 163, 169, 165, 171, 168, 172, 171, 173, 173, 174, 182, 176, 186, 176, 186, 176, 188, 176, 190, 175, 192, 172, 193, 169, 196, 167, 197, 164, 198, 162, 199, 159, 200, 157, 202, 154, 203, 151, 205, 148, 206, 145, 208, 140, 209, 137, 210, 133, 212, 129, 214, 126, 216, 122, 216, 119, 217, 115, 218, 113, 219, 110, 219, 108, 220, 105, 221, 103, 221, 101, 223, 99, 223, 97, 224, 96, 224, 94, 224, 93, 225, 93, 225, 93, 225, 93, 225, 91, 225, 90, 225, 90, 225, 90, 225, 90});
		  
		  one.add("O", new Integer[] {225, 64, 225, 64, 225, 64, 225, 64, 225, 64, 225, 64, 225, 64, 224, 64, 222, 64, 217, 65, 208, 72, 199, 80, 189, 88, 177, 99, 166, 110, 155, 125, 144, 141, 135, 154, 126, 168, 121, 179, 113, 194, 108, 206, 104, 217, 103, 223, 101, 234, 101, 243, 101, 254, 101, 259, 101, 266, 102, 268, 105, 269, 109, 270, 114, 271, 120, 271, 127, 270, 135, 267, 146, 261, 157, 255, 167, 248, 176, 241, 181, 235, 185, 232, 187, 227, 189, 214, 189, 214, 189, 207, 189, 200, 182, 182, 175, 174, 163, 165, 163, 165, 152, 156, 128, 137, 115, 124, 115, 124, 99, 107, 91, 98, 88, 94, 88, 94});
		  one.add("O", new Integer[] {182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 182, 72, 179, 72, 179, 72, 174, 72, 171, 73, 168, 76, 163, 79, 157, 84, 153, 88, 148, 92, 145, 95, 145, 95, 138, 103, 136, 106, 133, 111, 132, 112, 129, 116, 127, 119, 125, 121, 122, 125, 119, 129, 117, 134, 115, 139, 114, 144, 114, 149, 113, 154, 113, 159, 114, 165, 114, 165, 120, 171, 120, 171, 124, 174, 130, 177, 130, 177, 138, 179, 142, 180, 146, 181, 151, 181, 155, 181, 158, 181, 158, 181, 165, 181, 173, 181, 173, 181, 177, 176, 178, 172, 178, 172, 178, 169, 177, 164, 176, 161, 174, 159, 172, 155, 170, 151, 167, 147, 164, 141, 162, 135, 159, 129, 155, 124, 152, 119, 148, 114, 144, 110, 139, 105, 135, 99, 135, 99, 129, 91, 125, 86, 123, 84, 120, 80, 117, 77, 113, 74, 110, 70, 108, 68, 105, 65, 103, 63, 100, 61, 98, 59, 96, 56, 95, 55, 94, 54, 94, 54, 94, 54, 94, 54, 94, 54, 94, 54, 94, 54, 94, 54, 94, 55, 94, 56});
		  
		  one.add("P", new Integer[] {27, 72, 27, 72, 27, 72, 27, 72, 27, 72, 27, 72, 27, 72, 27, 73, 31, 74, 34, 77, 39, 83, 45, 88, 52, 96, 60, 102, 68, 107, 77, 112, 85, 116, 97, 122, 108, 127, 119, 132, 134, 137, 144, 141, 155, 145, 167, 149, 182, 154, 195, 157, 208, 159, 222, 160, 236, 161, 244, 161, 254, 160, 262, 157, 267, 155, 271, 152, 273, 150, 274, 149, 274, 146, 274, 141, 271, 136, 266, 131, 257, 127, 248, 123, 234, 121, 217, 121, 201, 121, 188, 121, 176, 121, 165, 121, 154, 121, 142, 121, 131, 121, 122, 124, 112, 128, 105, 131, 97, 134, 91, 139, 86, 143, 81, 150, 77, 155, 73, 158, 70, 160, 68, 162, 67, 164, 66, 166, 65, 170, 64, 176, 63, 181, 62, 187, 61, 192, 61, 195, 61, 195, 60, 197, 60, 197, 60, 197, 60, 197, 60, 197, 60, 197, 60, 197});
		  one.add("P", new Integer[] {65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 70, 65, 71, 67, 72, 69, 75, 72, 78, 75, 82, 79, 86, 83, 91, 86, 95, 89, 99, 92, 102, 96, 106, 99, 110, 103, 113, 105, 115, 108, 117, 110, 118, 112, 120, 114, 121, 116, 122, 119, 123, 123, 125, 126, 126, 128, 126, 132, 126, 135, 126, 137, 126, 140, 126, 144, 125, 147, 124, 150, 123, 156, 121, 159, 118, 162, 117, 165, 114, 166, 112, 167, 110, 168, 108, 168, 106, 168, 102, 168, 100, 168, 98, 168, 96, 166, 95, 163, 94, 160, 93, 156, 91, 154, 90, 151, 89, 149, 87, 147, 86, 144, 84, 141, 83, 139, 82, 136, 82, 134, 82, 131, 82, 129, 82, 126, 82, 122, 83, 120, 85, 118, 86, 116, 88, 114, 90, 112, 92, 110, 94, 108, 97, 107, 100, 105, 102, 103, 104, 102, 106, 100, 108, 98, 110, 95, 111, 93, 113, 91, 114, 90, 116, 88, 118, 86, 119, 84, 121, 83, 122, 81, 123, 79, 125, 78, 126, 76, 127, 75, 129, 74, 131, 72, 133, 70, 135, 68, 136, 67, 138, 65, 139, 64, 140, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141, 64, 141});
		  
		  one.add("Q", new Integer[] {243, 88, 243, 88, 243, 88, 243, 88, 243, 88, 243, 88, 243, 88, 243, 89, 243, 94, 239, 104, 233, 116, 224, 129, 212, 143, 200, 154, 183, 169, 167, 181, 149, 194, 134, 203, 123, 210, 110, 216, 98, 222, 88, 225, 77, 226, 69, 226, 64, 226, 57, 223, 53, 217, 52, 210, 52, 198, 52, 198, 56, 179, 61, 171, 67, 165, 75, 159, 84, 156, 94, 153, 108, 152, 123, 152, 139, 157, 152, 162, 167, 168, 179, 174, 188, 179, 198, 186, 205, 193, 210, 199, 217, 203, 224, 207, 234, 211, 234, 211, 237, 212, 240, 213});
		  one.add("Q", new Integer[] {210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 210, 81, 209, 81, 209, 81, 209, 83, 209, 84, 208, 86, 208, 86, 207, 87, 206, 89, 204, 91, 202, 93, 199, 97, 199, 97, 189, 105, 184, 108, 184, 108, 173, 116, 165, 120, 165, 120, 149, 131, 139, 136, 131, 141, 123, 145, 115, 148, 106, 151, 98, 153, 90, 155, 86, 156, 79, 157, 75, 157, 72, 157, 70, 156, 66, 154, 64, 151, 61, 149, 59, 145, 58, 143, 57, 140, 56, 137, 56, 132, 56, 128, 56, 125, 56, 121, 57, 118, 60, 112, 62, 107, 65, 103, 67, 99, 70, 96, 73, 94, 78, 91, 82, 88, 87, 88, 89, 88, 92, 88, 97, 88, 100, 88, 103, 91, 108, 92, 111, 94, 115, 96, 117, 97, 121, 101, 125, 103, 128, 106, 132, 109, 137, 113, 141, 116, 144, 118, 148, 121, 152, 123, 156, 126, 158, 127, 162, 129, 166, 130, 170, 133, 173, 134, 177, 138, 181, 140, 184, 142, 187, 144, 189, 146, 190, 147, 190, 148, 191, 148, 191, 148, 192, 149, 192, 149, 192, 149, 192, 149, 192, 149, 192, 149, 192, 149, 192, 149, 192, 149, 192, 149, 192, 149});
		  
		  one.add("R", new Integer[] {47, 35, 47, 35, 47, 35, 51, 35, 54, 36, 71, 47, 90, 61, 112, 78, 139, 100, 167, 127, 184, 147, 200, 165, 208, 176, 216, 186, 222, 191, 226, 198, 228, 201, 228, 201, 230, 203, 230, 203, 230, 203});
		  one.add("S", new Integer[] {227, 51, 227, 51, 227, 51, 227, 51, 226, 51, 221, 51, 212, 51, 194, 51, 182, 51, 160, 51, 143, 52, 130, 53, 114, 55, 98, 56, 84, 57, 72, 58, 61, 59, 54, 60, 48, 60, 43, 60, 41, 60, 40, 60, 40, 60, 40, 60, 40, 60, 40, 61, 40, 61, 41, 61, 43, 61, 52, 64, 70, 72, 94, 88, 121, 106, 149, 129, 149, 129, 208, 179, 226, 194, 242, 204, 256, 214, 267, 221, 274, 227, 277, 230, 277, 230, 281, 234, 281, 235, 281, 235, 281, 235, 281, 235, 281, 235, 281, 235, 279, 235, 277, 235, 269, 235, 255, 235, 233, 235, 196, 238, 167, 241, 134, 245, 102, 247, 82, 248, 63, 250, 53, 250, 47, 250, 44, 250, 44, 250, 44, 250});
		  one.add("T", new Integer[] {39, 148, 39, 148, 39, 148, 39, 148, 39, 148, 49, 148, 49, 148, 67, 148, 119, 148, 148, 148, 174, 148, 174, 148, 189, 148, 208, 148, 223, 148, 233, 148, 241, 147, 243, 146, 243, 146, 243, 146, 243, 146, 243, 146});
		  one.add("T", new Integer[] {80, 67, 80, 67, 81, 67, 93, 65, 107, 63, 118, 62, 129, 60, 142, 60, 163, 60, 184, 60, 202, 59, 211, 58, 213, 58, 215, 58, 217, 58, 217, 58, 217, 58, 217, 58, 217, 58, 217, 58, 217, 58, 217, 59, 217, 67, 216, 87, 212, 112, 210, 132, 209, 149, 209, 174, 209, 204, 209, 237, 209, 248, 209, 256, 209, 261, 209, 262, 209, 262, 209, 262, 209, 262, 209, 262, 209, 262, 209, 262, 209, 262, 209, 262, 209, 262, 206, 263, 186, 265, 161, 265, 161, 265, 108, 265, 90, 263, 77, 262, 67, 262, 63, 262, 63, 262, 63, 262, 63, 262});
		  one.add("U", new Integer[] {240, 71, 240, 71, 240, 71, 240, 71, 240, 71, 240, 71, 240, 71, 240, 71, 240, 71, 240, 71, 240, 71, 240, 73, 240, 78, 240, 87, 240, 96, 240, 106, 240, 117, 240, 129, 238, 142, 236, 154, 235, 164, 231, 182, 231, 182, 228, 193, 219, 210, 213, 218, 213, 218, 207, 222, 191, 229, 184, 231, 184, 231, 169, 233, 161, 233, 155, 232, 149, 228, 140, 216, 132, 204, 125, 186, 121, 170, 116, 142, 114, 124, 113, 108, 113, 91, 113, 80, 113, 74, 113, 68, 113, 65, 113, 65, 113, 65, 113, 65});
		  //one.add("V", new Integer[] {39, 148, 39, 148, 39, 148, 39, 148, 39, 148, 49, 148, 49, 148, 67, 148, 119, 148, 148, 148, 174, 148, 174, 148, 189, 148, 208, 148, 223, 148, 233, 148, 241, 147, 243, 146, 243, 146, 243, 146, 243, 146, 243, 146});
		  //one.add("V", new Integer[] {62, 70, 62, 70, 62, 70, 62, 70, 62, 70, 62, 70, 62, 70, 62, 70, 62, 70, 62, 70, 62, 71, 63, 75, 66, 80, 69, 89, 75, 101, 80, 116, 87, 132, 93, 150, 99, 168, 102, 180, 107, 197, 111, 210, 114, 222, 116, 229, 117, 233, 118, 236, 119, 238, 120, 238, 121, 238, 122, 238, 123, 238, 124, 238, 125, 238, 127, 235, 129, 229, 135, 214, 141, 194, 149, 168, 154, 149, 161, 128, 166, 114, 170, 104, 173, 99, 176, 94, 178, 92, 179, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91, 180, 91});
		  //one.add("V", new Integer[] {36, 104, 36, 104, 36, 104, 36, 104, 36, 104, 36, 104, 36, 104, 36, 110, 36, 117, 38, 126, 41, 143, 43, 151, 47, 165, 50, 176, 53, 188, 57, 200, 61, 214, 67, 229, 72, 240, 76, 249, 77, 253, 79, 258, 80, 260, 81, 261, 81, 261, 82, 261, 82, 261, 83, 261, 84, 261, 88, 254, 94, 243, 105, 218, 119, 184, 136, 142, 147, 112, 156, 94, 166, 78, 170, 72});
		  one.add("V", new Integer[] {130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 239, 130, 238, 130, 236, 128, 229, 123, 216, 115, 198, 107, 180, 102, 167, 98, 155, 95, 145, 93, 137, 92, 131, 91, 125, 88, 121, 88, 119, 87, 117, 87, 115, 87, 115, 87, 115, 87, 115, 87, 115, 87, 115, 87, 115, 87, 115, 87, 115, 87, 115, 87, 115, 88, 115, 93, 115, 105, 115, 120, 115, 136, 115, 159, 115, 190, 115, 199, 115, 199, 115, 206, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 115, 207, 116, 207, 116, 205, 129, 196, 144, 187, 162, 176, 178, 166, 194, 160, 204, 156, 213, 152, 221, 150, 225, 149, 227, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228, 149, 228});
		  one.add("W", new Integer[] {45, 52, 45, 52, 45, 52, 45, 52, 45, 53, 45, 58, 45, 66, 45, 87, 45, 104, 45, 123, 45, 149, 45, 166, 45, 190, 47, 208, 51, 222, 59, 238, 66, 249, 72, 259, 77, 265, 82, 269, 89, 275, 95, 278, 102, 279, 110, 279, 121, 279, 134, 271, 145, 261, 161, 238, 170, 218, 177, 195, 182, 175, 186, 150, 188, 131, 189, 116, 191, 101, 196, 88, 199, 77, 203, 68, 207, 60, 212, 53, 216, 50, 220, 47, 225, 47, 228, 47, 231, 49, 235, 63, 240, 84, 246, 107, 251, 132, 254, 159, 256, 186, 257, 214, 257, 232, 257, 244, 258, 258, 259, 268, 260, 274, 261, 281, 262, 285});
		 
		  one.add("X", new Integer[] {79, 51, 79, 51, 83, 51, 86, 51, 95, 52, 109, 58, 121, 64, 138, 72, 155, 81, 173, 92, 189, 101, 198, 108, 209, 118, 217, 126, 222, 136, 224, 147, 226, 159, 226, 171, 225, 185, 218, 196, 213, 202, 206, 209, 197, 213, 190, 215, 170, 218, 170, 218, 159, 218, 159, 218, 151, 210, 151, 201, 151, 201, 151, 189, 163, 160, 169, 148, 181, 133, 181, 133, 200, 106, 210, 90, 215, 79, 215, 79, 231, 47, 235, 36, 240, 26, 240, 26, 244, 20, 249, 15, 253, 12, 253, 12});
		  one.add("X", new Integer[] {77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 77, 56, 78, 56, 79, 56, 81, 57, 85, 59, 88, 62, 90, 63, 93, 65, 96, 67, 98, 69, 101, 71, 103, 72, 105, 74, 108, 75, 111, 77, 114, 79, 116, 82, 118, 84, 120, 87, 122, 89, 124, 91, 127, 94, 129, 97, 132, 100, 134, 102, 135, 102, 136, 104, 137, 106, 138, 109, 139, 111, 139, 113, 140, 116, 141, 119, 141, 123, 142, 126, 142, 130, 142, 133, 142, 134, 142, 136, 141, 138, 140, 140, 139, 142, 137, 144, 136, 146, 134, 147, 132, 149, 130, 150, 128, 150, 127, 151, 125, 151, 122, 151, 119, 151, 116, 151, 113, 151, 111, 151, 108, 151, 107, 151, 105, 149, 103, 147, 101, 145, 100, 143, 98, 139, 96, 135, 95, 131, 94, 128, 94, 125, 94, 119, 94, 119, 94, 116, 94, 113, 94, 110, 95, 108, 96, 106, 96, 106, 100, 99, 102, 96, 104, 94, 106, 91, 110, 88, 113, 85, 116, 81, 119, 79, 124, 75, 127, 72, 130, 70, 132, 68, 134, 67, 135, 66, 136, 65, 137, 65, 138, 65, 138, 65, 138, 64, 138, 64, 138, 64, 138, 64, 138, 64, 138, 64, 139, 64, 139, 64, 139, 64, 139, 64, 139, 64, 139, 64});
		  
		  one.add("Y", new Integer[] {242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 242, 38, 240, 38, 231, 49, 219, 71, 201, 99, 183, 134, 168, 159, 142, 199, 128, 222, 118, 238, 109, 255, 103, 265, 98, 275, 95, 280, 93, 285, 93, 287, 93, 288});
		  one.add("Z", new Integer[] {43, 50, 43, 50, 43, 50, 43, 50, 43, 50, 44, 50, 46, 50, 52, 50, 61, 50, 70, 50, 79, 50, 90, 50, 102, 50, 118, 50, 133, 50, 143, 51, 156, 54, 169, 57, 183, 61, 193, 64, 201, 69, 209, 73, 213, 77, 218, 81, 221, 84, 222, 86, 223, 88, 223, 92, 211, 103, 194, 120, 171, 143, 144, 166, 125, 182, 106, 202, 94, 215, 83, 227, 75, 237, 67, 245, 61, 252, 57, 259, 55, 265, 52, 271, 51, 274, 51, 276, 50, 277, 50, 277, 50, 277, 50, 278, 51, 278, 52, 278, 54, 278, 59, 278, 67, 273, 80, 267, 96, 259, 109, 255, 127, 250, 146, 247, 167, 247, 183, 247, 200, 247, 212, 249, 220, 251, 225, 252, 229, 254, 231, 255});
		  
		  one.add("space", new Integer[] {43, 52, 43, 52, 43, 52, 43, 52, 43, 52, 43, 53, 43, 58, 43, 70, 43, 87, 43, 111, 43, 143, 43, 179, 43, 211, 42, 232, 42, 245, 42, 256, 44, 259, 44, 259, 44, 259, 44, 259, 44, 259, 44, 261, 48, 263, 53, 266, 58, 268, 63, 270, 72, 272, 82, 274, 96, 274, 117, 274, 151, 269, 184, 264, 207, 261, 227, 260, 249, 261, 261, 262, 267, 263, 268, 264, 268, 264, 268, 264, 268, 264, 268, 264, 268, 264, 268, 264, 268, 264, 268, 264, 268, 264, 268, 264, 268, 261, 268, 254, 268, 235, 268, 212, 265, 189, 263, 164, 263, 128, 263, 105, 262, 90, 260, 79, 260, 74, 258, 70, 257, 67, 257, 67, 257, 67, 257, 67, 257, 67, 257, 67, 257, 67, 256, 66, 251, 66, 242, 67, 230, 69, 211, 71, 186, 71, 147, 71, 131, 70, 115, 68, 93, 65, 73, 62, 57, 58, 49, 57, 46, 56, 46, 56, 46, 56, 46, 56, 46, 56, 46, 56, 46, 56, 46, 56, 46, 56});
		  //one.add("space", new Integer[] {140, 114, 140, 114, 140, 114, 140, 112, 140, 108, 145, 105, 151, 103, 154, 102, 159, 102, 163, 102, 166, 102, 169, 102, 170, 102, 172, 103, 174, 105, 176, 107, 179, 111, 180, 114, 182, 118, 184, 122, 185, 127, 186, 131, 186, 135, 186, 140, 186, 143, 186, 147, 186, 150, 186, 153, 186, 157, 186, 160, 185, 162, 183, 164, 181, 166, 178, 167, 174, 168, 170, 169, 164, 170, 158, 170, 152, 170, 146, 169, 140, 167, 136, 166, 132, 163, 128, 161, 126, 158, 125, 153, 124, 148, 124, 142, 124, 137, 124, 132, 124, 127, 124, 124, 125, 121, 127, 120, 129, 118, 130, 117, 132, 115, 134, 114, 136, 113, 138, 112, 139, 112, 139, 112, 139, 112, 139, 112, 140, 112, 140, 112});
		  one.add("backspace", new Integer[] {52, 77, 52, 77, 52, 77, 54, 76, 58, 76, 69, 74, 81, 74, 101, 74, 144, 74, 166, 74, 186, 74, 202, 73, 214, 72, 222, 72, 227, 72, 227, 72, 227, 72, 227, 72, 227, 72, 227, 72, 227, 72, 227, 72, 227, 72, 229, 71, 231, 79, 231, 92, 231, 110, 232, 132, 232, 149, 232, 161, 232, 168, 232, 174, 232, 180, 233, 183, 233, 186, 233, 188, 233, 190, 233, 190, 233, 190, 233, 190, 233, 190, 233, 190, 233, 190, 232, 191, 224, 193, 205, 195, 93, 186, 93, 186, 85, 186, 85, 186, 85, 186, 82, 186, 82, 186, 82, 186, 82, 186, 82, 186, 82, 186, 82, 186, 82, 186, 82, 186, 82, 186, 82, 184, 82, 168, 82, 159, 81, 148, 78, 128, 78, 109, 78, 101, 78, 101, 78, 101, 78, 101, 78, 101, 78, 101, 78, 101, 78, 101});
		  //one.add("backspace", new Integer[] {127,141,124,140,120,139,118,139,116,139,111,140,109,141,104,144,100,147,96,152,93,157,90,163,87,169,85,175,83,181,82,190,82,195,83,200,84,205,88,213,91,216,96,219,103,222,108,224,111,224,120,224,133,223,142,222,152,218,160,214,167,210,173,204,178,198,179,196,182,188,182,177,178,167,170,150,163,138,152,130,143,129,140,131,129,136,126,139} );
		  
		  one.add("caps", new Integer[] {151, 257, 151, 257, 151, 257, 151, 252, 153, 242, 153, 229, 153, 215, 153, 194, 153, 168, 153, 138, 153, 108, 153, 81, 154, 60, 156, 54, 156, 54, 156, 54, 156, 54, 156, 54, 156, 54, 156, 54, 156, 54, 154, 55, 145, 66, 134, 81, 124, 96, 115, 109, 109, 123, 106, 128, 106, 130, 106, 131, 106, 131, 106, 131, 106, 131, 106, 131, 107, 131, 111, 128, 115, 123, 119, 115, 124, 104, 130, 93, 138, 77, 143, 65, 148, 54, 153, 42, 156, 37, 158, 35, 159, 33, 161, 31, 161, 31, 161, 31, 161, 31, 161, 31, 161, 31, 161, 31, 161, 31, 161, 31, 163, 33, 165, 45, 168, 61, 170, 77, 172, 92, 175, 102, 176, 111, 178, 118, 179, 123, 181, 126, 184, 130, 184, 130, 184, 130} );
		  
		  // end new alphabet
		  
		  
		  one.bind("A", main, "detectedA");
		  one.bind("B", main, "detectedB");
		  one.bind("C", main, "detectedC");
		  one.bind("D", main, "detectedD");
		  one.bind("E", main, "detectedE");
		  one.bind("F", main, "detectedF");
		  one.bind("G", main, "detectedG");
		  one.bind("H", main, "detectedH");
		  one.bind("I", main, "detectedI");
		  one.bind("J", main, "detectedJ");
		  one.bind("K", main, "detectedK");
		  one.bind("L", main, "detectedL");
		  one.bind("M", main, "detectedM");
		  one.bind("N", main, "detectedN");
		  one.bind("O", main, "detectedO");
		  one.bind("P", main, "detectedP");
		  one.bind("Q", main, "detectedQ");
		  one.bind("R", main, "detectedR");
		  one.bind("S", main, "detectedS");
		  one.bind("T", main, "detectedT");
		  one.bind("U", main, "detectedU");
		  one.bind("V", main, "detectedV");
		  one.bind("W", main, "detectedW");
		  one.bind("X", main, "detectedX");
		  one.bind("Y", main, "detectedY");
		  one.bind("Z", main, "detectedZ");
		  one.bind("caps", main, "detectedCaps");
		  one.bind("space", main, "detectedSpace");
		  one.bind("backspace", main, "detectedBackSpace");
		  one.setMinLength(50);
		  one.setMaxLength(2500);
		  one.setMaxTime(5000);

		  one.setMinScore(75); // 85%
		  one.setRotationAngle(10);
		  one.setFragmentationRate(64);

		  println(one);
		  one.setVerbose(true);  
		  
		  //one.start(200);
		  //one.setMaxTime(5000);
	}
	
	@Override
	public void draw()
	{
            if(Grabo){
		if(noFingers)
		{
			//System.out.println("Elapsed time 1: " + (millis() - time));
		}
		if(noFingers && ((millis() - time) > 3000))
		{
			one.check();
			System.out.println(templateXY.toString());
                        Integer[] stockArr = new Integer[templateXY.size()];
                        stockArr = templateXY.toArray(stockArr);
                        one.add("gesto", stockArr);
                        one.bind("gesto",main, "detectedA");
			one.end(200);
			isStarted = false;

			//noFingers = false;
			//time = 0;
		}
		
		clear();
		background(250);
		stroke(30);
		smooth();  
		noFill();
		one.draw();
		
		
		// anyway to detect only one finger?
		// detect a finger
		// start the unistroke
		// finger moves away - stop unistroke
		if(leap.getFingerList().size() == 0)
		{
			if(noFingers == false)
			{
				noFingers = true;
				
				time = millis();
				
				//System.out.println(noFingers + ", time: " + time);
			}

		}
		else
		{
//			if(leap.getFingerList().size() >= 2)
//			{
//				one.end(200);
//				isStarted = false;
//			}
				 // get a new finger
				 for (Finger finger : leap.getFingerList()) {
						noFingers = false;
						
						
						if(!isStarted)
					    {
					    	one.start(200);
					    	isStarted = true;
					    }

					   PVector fingerPos = leap.getTip(finger);
					   ellipse(fingerPos.x, fingerPos.y, 10, 10);
                                           
					   //avgPos.add(fingerPos);	
                                           System.out.println(fingerPos.x + " , " +  fingerPos.y);
                                           templateXY.add(Math.round(fingerPos.x));
                                           templateXY.add(Math.round(fingerPos.y));
                                           //templateXY.add(fingerPos.y);
					   one.update(200, fingerPos.x, fingerPos.y);
					    	break;

					    
					   
					  }
			 
				 
			 //avgPos.div(leap.getFingerList().size());
			 //ellipse(avgPos.x, avgPos.y, 10, 10);
			 //one.update(200, avgPos.x, avgPos.y);
		}
            }
		
	}
	
	
	

	
	@Override
	public void mousePressed()  
	{ 
	  //one.start(100);
	} // 100 = ID
	
	@Override
	public void mouseDragged()  { //one.update(100, mouseX, mouseY); 
	}
	
	@Override
	public void mouseReleased() { //one.end(100); 

	}
        
}
